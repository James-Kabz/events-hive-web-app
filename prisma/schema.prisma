// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String     @id @default(cuid())
  name          String?
  email         String?
  emailVerified DateTime?
  profileImg    String?    @db.LongText
  password      String?
  accounts      Account[]
  sessions      Session[]
  UserRole      UserRole[]
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])

  @@index([userId], map: "Session_userId_fkey")
}

model VerficationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.LongText
  access_token      String? @db.LongText
  expires_at        Int?
  token_type        String
  scope             String?
  id_token          String? @db.LongText
  session_state     String?
  user              User    @relation(fields: [userId], references: [id])
}

model Role {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  description    String?
  RolePermission RolePermission[]
  UserRole       UserRole[]
}

model Permission {
  id             Int              @id @default(autoincrement())
  name           String           @unique
  description    String?
  RolePermission RolePermission[]
}

model UserRole {
  userId String
  roleId Int
  role   Role   @relation(fields: [roleId], references: [id])
  user   User   @relation(fields: [userId], references: [id])

  @@id([userId, roleId])
  @@index([roleId], map: "UserRole_roleId_fkey")
}

model RolePermission {
  roleId       Int
  permissionId Int
  permission   Permission @relation(fields: [permissionId], references: [id])
  role         Role       @relation(fields: [roleId], references: [id])

  @@id([roleId, permissionId])
  @@index([permissionId], map: "RolePermission_permission_fkey")
}